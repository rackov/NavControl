// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: service.proto

package proto

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Уровни логирования
type LogLevel int32

const (
	LogLevel_DEBUG LogLevel = 0
	LogLevel_INFO  LogLevel = 1
	LogLevel_WARN  LogLevel = 2
	LogLevel_ERROR LogLevel = 3
	LogLevel_FATAL LogLevel = 4
	LogLevel_PANIC LogLevel = 5
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "WARN",
		3: "ERROR",
		4: "FATAL",
		5: "PANIC",
	}
	LogLevel_value = map[string]int32{
		"DEBUG": 0,
		"INFO":  1,
		"WARN":  2,
		"ERROR": 3,
		"FATAL": 4,
		"PANIC": 5,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

// Типы сервисов
type ServiceManagerType int32

const (
	ServiceManagerType_RECEIVER     ServiceManagerType = 0
	ServiceManagerType_WRITER       ServiceManagerType = 1
	ServiceManagerType_RETRANSLATOR ServiceManagerType = 2
)

// Enum value maps for ServiceManagerType.
var (
	ServiceManagerType_name = map[int32]string{
		0: "RECEIVER",
		1: "WRITER",
		2: "RETRANSLATOR",
	}
	ServiceManagerType_value = map[string]int32{
		"RECEIVER":     0,
		"WRITER":       1,
		"RETRANSLATOR": 2,
	}
)

func (x ServiceManagerType) Enum() *ServiceManagerType {
	p := new(ServiceManagerType)
	*p = x
	return p
}

func (x ServiceManagerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceManagerType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (ServiceManagerType) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x ServiceManagerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceManagerType.Descriptor instead.
func (ServiceManagerType) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

type IsEmptyVar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsEmpty       bool                   `protobuf:"varint,1,opt,name=is_empty,json=isEmpty,proto3" json:"is_empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsEmptyVar) Reset() {
	*x = IsEmptyVar{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsEmptyVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmptyVar) ProtoMessage() {}

func (x *IsEmptyVar) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmptyVar.ProtoReflect.Descriptor instead.
func (*IsEmptyVar) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *IsEmptyVar) GetIsEmpty() bool {
	if x != nil {
		return x.IsEmpty
	}
	return false
}

// Ответ с информацией о сервисе
type ServiceInfoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version        string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Build          string                 `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
	BuildDate      string                 `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	GitHash        string                 `protobuf:"bytes,5,opt,name=git_hash,json=gitHash,proto3" json:"git_hash,omitempty"`
	GitBranch      string                 `protobuf:"bytes,6,opt,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`
	GitState       string                 `protobuf:"bytes,7,opt,name=git_state,json=gitState,proto3" json:"git_state,omitempty"`
	GitSummary     string                 `protobuf:"bytes,8,opt,name=git_summary,json=gitSummary,proto3" json:"git_summary,omitempty"`
	GitDescription string                 `protobuf:"bytes,9,opt,name=git_description,json=gitDescription,proto3" json:"git_description,omitempty"`
	GitUrl         string                 `protobuf:"bytes,10,opt,name=git_url,json=gitUrl,proto3" json:"git_url,omitempty"`
	GitUser        string                 `protobuf:"bytes,11,opt,name=git_user,json=gitUser,proto3" json:"git_user,omitempty"`
	GitEmail       string                 `protobuf:"bytes,12,opt,name=git_email,json=gitEmail,proto3" json:"git_email,omitempty"`
	GitRemote      string                 `protobuf:"bytes,13,opt,name=git_remote,json=gitRemote,proto3" json:"git_remote,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ServiceInfoResponse) Reset() {
	*x = ServiceInfoResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfoResponse) ProtoMessage() {}

func (x *ServiceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfoResponse.ProtoReflect.Descriptor instead.
func (*ServiceInfoResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceInfoResponse) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *ServiceInfoResponse) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitHash() string {
	if x != nil {
		return x.GitHash
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitState() string {
	if x != nil {
		return x.GitState
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitSummary() string {
	if x != nil {
		return x.GitSummary
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitDescription() string {
	if x != nil {
		return x.GitDescription
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitUrl() string {
	if x != nil {
		return x.GitUrl
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitUser() string {
	if x != nil {
		return x.GitUser
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitEmail() string {
	if x != nil {
		return x.GitEmail
	}
	return ""
}

func (x *ServiceInfoResponse) GetGitRemote() string {
	if x != nil {
		return x.GitRemote
	}
	return ""
}

type ServiceManager struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpSm          string                 `protobuf:"bytes,2,opt,name=ip_sm,json=ipSm,proto3" json:"ip_sm,omitempty"`
	PortSm        int32                  `protobuf:"varint,3,opt,name=port_sm,json=portSm,proto3" json:"port_sm,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	TypeSm        string                 `protobuf:"bytes,5,opt,name=type_sm,json=typeSm,proto3" json:"type_sm,omitempty"`
	IpBroker      string                 `protobuf:"bytes,6,opt,name=ip_broker,json=ipBroker,proto3" json:"ip_broker,omitempty"`
	PortBroker    int32                  `protobuf:"varint,7,opt,name=port_broker,json=portBroker,proto3" json:"port_broker,omitempty"`
	TopicBroker   string                 `protobuf:"bytes,8,opt,name=topic_broker,json=topicBroker,proto3" json:"topic_broker,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	Status        string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	Description   string                 `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	LogLevel      string                 `protobuf:"bytes,12,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	ErrorMsg      string                 `protobuf:"bytes,13,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceManager) Reset() {
	*x = ServiceManager{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceManager) ProtoMessage() {}

func (x *ServiceManager) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceManager.ProtoReflect.Descriptor instead.
func (*ServiceManager) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceManager) GetIpSm() string {
	if x != nil {
		return x.IpSm
	}
	return ""
}

func (x *ServiceManager) GetPortSm() int32 {
	if x != nil {
		return x.PortSm
	}
	return 0
}

func (x *ServiceManager) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceManager) GetTypeSm() string {
	if x != nil {
		return x.TypeSm
	}
	return ""
}

func (x *ServiceManager) GetIpBroker() string {
	if x != nil {
		return x.IpBroker
	}
	return ""
}

func (x *ServiceManager) GetPortBroker() int32 {
	if x != nil {
		return x.PortBroker
	}
	return 0
}

func (x *ServiceManager) GetTopicBroker() string {
	if x != nil {
		return x.TopicBroker
	}
	return ""
}

func (x *ServiceManager) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ServiceManager) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServiceManager) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceManager) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *ServiceManager) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// Ответ с текущим уровнем логирования
type LogLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogLevelResponse) Reset() {
	*x = LogLevelResponse{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelResponse) ProtoMessage() {}

func (x *LogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelResponse.ProtoReflect.Descriptor instead.
func (*LogLevelResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *LogLevelResponse) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogLevelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LogLevelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Эти сообщения теперь общие и могут использоваться в других .proto файлах
type SetLogLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"` // debug, info, warn, error, fatal, panic
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogLevelRequest) Reset() {
	*x = SetLogLevelRequest{}
	mi := &file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelRequest) ProtoMessage() {}

func (x *SetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevelRequest.ProtoReflect.Descriptor instead.
func (*SetLogLevelRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetLogLevelRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type SetLogLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogLevelResponse) Reset() {
	*x = SetLogLevelResponse{}
	mi := &file_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelResponse) ProtoMessage() {}

func (x *SetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevelResponse.ProtoReflect.Descriptor instead.
func (*SetLogLevelResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *SetLogLevelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на чтение логов
type ReadLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Фильтр по уровню логирования (DEBUG, INFO, WARN, ERROR).
	// Если не указан, читаются логи всех уровней.
	Level string `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	// Фильтр по начальной дате (Unix timestamp в секундах).
	// Если не указан, читается с самого начала файла.
	StartDate int64 `protobuf:"varint,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// Фильтр по конечной дате (Unix timestamp в секундах).
	// Если не указан, читается до конца файла.
	EndDate int64 `protobuf:"varint,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// Максимальное количество строк для возврата.
	// Если не указан или 0, возвращаются все найденные строки (осторожно с большими файлами).
	Limit         int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	IdService     int32  `protobuf:"varint,5,opt,name=id_service,json=idService,proto3" json:"id_service,omitempty"`
	Protocol      string `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port          int32  `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	PosEnd        bool   `protobuf:"varint,8,opt,name=pos_end,json=posEnd,proto3" json:"pos_end,omitempty"`
	Msg           string `protobuf:"bytes,9,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadLogsRequest) Reset() {
	*x = ReadLogsRequest{}
	mi := &file_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLogsRequest) ProtoMessage() {}

func (x *ReadLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLogsRequest.ProtoReflect.Descriptor instead.
func (*ReadLogsRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReadLogsRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ReadLogsRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ReadLogsRequest) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *ReadLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadLogsRequest) GetIdService() int32 {
	if x != nil {
		return x.IdService
	}
	return 0
}

func (x *ReadLogsRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ReadLogsRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ReadLogsRequest) GetPosEnd() bool {
	if x != nil {
		return x.PosEnd
	}
	return false
}

func (x *ReadLogsRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Ответ с прочитанными логами
type ReadLogsResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Сообщение об ошибке или статус
	// Сами строки логов
	LogLines      []string `protobuf:"bytes,3,rep,name=log_lines,json=logLines,proto3" json:"log_lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadLogsResponse) Reset() {
	*x = ReadLogsResponse{}
	mi := &file_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLogsResponse) ProtoMessage() {}

func (x *ReadLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLogsResponse.ProtoReflect.Descriptor instead.
func (*ReadLogsResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReadLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReadLogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReadLogsResponse) GetLogLines() []string {
	if x != nil {
		return x.LogLines
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\x05proto\x1a\x1bgoogle/protobuf/empty.proto\"'\n" +
	"\n" +
	"IsEmptyVar\x12\x19\n" +
	"\bis_empty\x18\x01 \x01(\bR\aisEmpty\"\x89\x03\n" +
	"\x13ServiceInfoResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x14\n" +
	"\x05build\x18\x03 \x01(\tR\x05build\x12\x1d\n" +
	"\n" +
	"build_date\x18\x04 \x01(\tR\tbuildDate\x12\x19\n" +
	"\bgit_hash\x18\x05 \x01(\tR\agitHash\x12\x1d\n" +
	"\n" +
	"git_branch\x18\x06 \x01(\tR\tgitBranch\x12\x1b\n" +
	"\tgit_state\x18\a \x01(\tR\bgitState\x12\x1f\n" +
	"\vgit_summary\x18\b \x01(\tR\n" +
	"gitSummary\x12'\n" +
	"\x0fgit_description\x18\t \x01(\tR\x0egitDescription\x12\x17\n" +
	"\agit_url\x18\n" +
	" \x01(\tR\x06gitUrl\x12\x19\n" +
	"\bgit_user\x18\v \x01(\tR\agitUser\x12\x1b\n" +
	"\tgit_email\x18\f \x01(\tR\bgitEmail\x12\x1d\n" +
	"\n" +
	"git_remote\x18\r \x01(\tR\tgitRemote\"\xd8\x02\n" +
	"\x0eServiceManager\x12\x13\n" +
	"\x05ip_sm\x18\x02 \x01(\tR\x04ipSm\x12\x17\n" +
	"\aport_sm\x18\x03 \x01(\x05R\x06portSm\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x17\n" +
	"\atype_sm\x18\x05 \x01(\tR\x06typeSm\x12\x1b\n" +
	"\tip_broker\x18\x06 \x01(\tR\bipBroker\x12\x1f\n" +
	"\vport_broker\x18\a \x01(\x05R\n" +
	"portBroker\x12!\n" +
	"\ftopic_broker\x18\b \x01(\tR\vtopicBroker\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\x12\x1b\n" +
	"\tlog_level\x18\f \x01(\tR\blogLevel\x12\x1b\n" +
	"\terror_msg\x18\r \x01(\tR\berrorMsg\"\\\n" +
	"\x10LogLevelResponse\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"*\n" +
	"\x12SetLogLevelRequest\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\"/\n" +
	"\x13SetLogLevelResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xf1\x01\n" +
	"\x0fReadLogsRequest\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x1d\n" +
	"\n" +
	"start_date\x18\x02 \x01(\x03R\tstartDate\x12\x19\n" +
	"\bend_date\x18\x03 \x01(\x03R\aendDate\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"id_service\x18\x05 \x01(\x05R\tidService\x12\x1a\n" +
	"\bprotocol\x18\x06 \x01(\tR\bprotocol\x12\x12\n" +
	"\x04port\x18\a \x01(\x05R\x04port\x12\x17\n" +
	"\apos_end\x18\b \x01(\bR\x06posEnd\x12\x10\n" +
	"\x03msg\x18\t \x01(\tR\x03msg\"c\n" +
	"\x10ReadLogsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tlog_lines\x18\x03 \x03(\tR\blogLines*J\n" +
	"\bLogLevel\x12\t\n" +
	"\x05DEBUG\x10\x00\x12\b\n" +
	"\x04INFO\x10\x01\x12\b\n" +
	"\x04WARN\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\t\n" +
	"\x05FATAL\x10\x04\x12\t\n" +
	"\x05PANIC\x10\x05*@\n" +
	"\x12ServiceManagerType\x12\f\n" +
	"\bRECEIVER\x10\x00\x12\n" +
	"\n" +
	"\x06WRITER\x10\x01\x12\x10\n" +
	"\fRETRANSLATOR\x10\x022\x89\x03\n" +
	"\vServiceInfo\x124\n" +
	"\aIsEmpty\x12\x16.google.protobuf.Empty\x1a\x11.proto.IsEmptyVar\x12=\n" +
	"\aGetInfo\x12\x16.google.protobuf.Empty\x1a\x1a.proto.ServiceInfoResponse\x12B\n" +
	"\x11GetServiceManager\x12\x16.google.protobuf.Empty\x1a\x15.proto.ServiceManager\x12>\n" +
	"\vGetLogLevel\x12\x16.google.protobuf.Empty\x1a\x17.proto.LogLevelResponse\x12D\n" +
	"\vSetLogLevel\x12\x19.proto.SetLogLevelRequest\x1a\x1a.proto.SetLogLevelResponse\x12;\n" +
	"\bReadLogs\x12\x16.proto.ReadLogsRequest\x1a\x17.proto.ReadLogsResponseB\x12Z\x10NavControl/protob\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_service_proto_goTypes = []any{
	(LogLevel)(0),               // 0: proto.LogLevel
	(ServiceManagerType)(0),     // 1: proto.ServiceManagerType
	(*IsEmptyVar)(nil),          // 2: proto.IsEmptyVar
	(*ServiceInfoResponse)(nil), // 3: proto.ServiceInfoResponse
	(*ServiceManager)(nil),      // 4: proto.ServiceManager
	(*LogLevelResponse)(nil),    // 5: proto.LogLevelResponse
	(*SetLogLevelRequest)(nil),  // 6: proto.SetLogLevelRequest
	(*SetLogLevelResponse)(nil), // 7: proto.SetLogLevelResponse
	(*ReadLogsRequest)(nil),     // 8: proto.ReadLogsRequest
	(*ReadLogsResponse)(nil),    // 9: proto.ReadLogsResponse
	(*empty.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_service_proto_depIdxs = []int32{
	10, // 0: proto.ServiceInfo.IsEmpty:input_type -> google.protobuf.Empty
	10, // 1: proto.ServiceInfo.GetInfo:input_type -> google.protobuf.Empty
	10, // 2: proto.ServiceInfo.GetServiceManager:input_type -> google.protobuf.Empty
	10, // 3: proto.ServiceInfo.GetLogLevel:input_type -> google.protobuf.Empty
	6,  // 4: proto.ServiceInfo.SetLogLevel:input_type -> proto.SetLogLevelRequest
	8,  // 5: proto.ServiceInfo.ReadLogs:input_type -> proto.ReadLogsRequest
	2,  // 6: proto.ServiceInfo.IsEmpty:output_type -> proto.IsEmptyVar
	3,  // 7: proto.ServiceInfo.GetInfo:output_type -> proto.ServiceInfoResponse
	4,  // 8: proto.ServiceInfo.GetServiceManager:output_type -> proto.ServiceManager
	5,  // 9: proto.ServiceInfo.GetLogLevel:output_type -> proto.LogLevelResponse
	7,  // 10: proto.ServiceInfo.SetLogLevel:output_type -> proto.SetLogLevelResponse
	9,  // 11: proto.ServiceInfo.ReadLogs:output_type -> proto.ReadLogsResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
