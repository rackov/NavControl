// Синтаксис Protocol Buffers v3

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: receiver.proto

// Пакет для Go

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetActiveCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveCount) Reset() {
	*x = GetActiveCount{}
	mi := &file_receiver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveCount) ProtoMessage() {}

func (x *GetActiveCount) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveCount.ProtoReflect.Descriptor instead.
func (*GetActiveCount) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{0}
}

func (x *GetActiveCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Определение порта
type PortDefinition struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IdReceiver       int32                  `protobuf:"varint,1,opt,name=id_receiver,json=idReceiver,proto3" json:"id_receiver,omitempty"`                    // Уникальный идентификатор receiver
	IdSm             int32                  `protobuf:"varint,2,opt,name=id_sm,json=idSm,proto3" json:"id_sm,omitempty"`                                      // Уникальный идентификатор SM
	Active           bool                   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`                                              // Активен ли receiver
	Name             string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                   // Имя receiver
	PortReceiver     int32                  `protobuf:"varint,7,opt,name=port_receiver,json=portReceiver,proto3" json:"port_receiver,omitempty"`              // Номер порта receiver
	Protocol         string                 `protobuf:"bytes,8,opt,name=protocol,proto3" json:"protocol,omitempty"`                                           // Протокол receiver (EGTS, Arnavi, NDTP)
	Status           string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`                                              // Статус receiver
	Description      string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`                                    // Описание receiver
	ConnectionsCount int32                  `protobuf:"varint,13,opt,name=connections_count,json=connectionsCount,proto3" json:"connections_count,omitempty"` // Количество подключенных клиентов
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PortDefinition) Reset() {
	*x = PortDefinition{}
	mi := &file_receiver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortDefinition) ProtoMessage() {}

func (x *PortDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortDefinition.ProtoReflect.Descriptor instead.
func (*PortDefinition) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{1}
}

func (x *PortDefinition) GetIdReceiver() int32 {
	if x != nil {
		return x.IdReceiver
	}
	return 0
}

func (x *PortDefinition) GetIdSm() int32 {
	if x != nil {
		return x.IdSm
	}
	return 0
}

func (x *PortDefinition) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *PortDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortDefinition) GetPortReceiver() int32 {
	if x != nil {
		return x.PortReceiver
	}
	return 0
}

func (x *PortDefinition) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *PortDefinition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PortDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PortDefinition) GetConnectionsCount() int32 {
	if x != nil {
		return x.ConnectionsCount
	}
	return 0
}

// Ответ на запрос списка портов
type ListPortsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*PortDefinition      `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPortsResponse) Reset() {
	*x = ListPortsResponse{}
	mi := &file_receiver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPortsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortsResponse) ProtoMessage() {}

func (x *ListPortsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortsResponse.ProtoReflect.Descriptor instead.
func (*ListPortsResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{2}
}

func (x *ListPortsResponse) GetPorts() []*PortDefinition {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ListPortsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListPortsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PortStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                      // "EGTS", "Arnavi", "NDTP"
	PortReceiver  int32                  `protobuf:"varint,2,opt,name=port_receiver,json=portReceiver,proto3" json:"port_receiver,omitempty"` // Номер порта
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortStatusResponse) Reset() {
	*x = PortStatusResponse{}
	mi := &file_receiver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStatusResponse) ProtoMessage() {}

func (x *PortStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStatusResponse.ProtoReflect.Descriptor instead.
func (*PortStatusResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{3}
}

func (x *PortStatusResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortStatusResponse) GetPortReceiver() int32 {
	if x != nil {
		return x.PortReceiver
	}
	return 0
}

func (x *PortStatusResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PortStatusList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*PortDefinition      `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortStatusList) Reset() {
	*x = PortStatusList{}
	mi := &file_receiver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStatusList) ProtoMessage() {}

func (x *PortStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStatusList.ProtoReflect.Descriptor instead.
func (*PortStatusList) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{4}
}

func (x *PortStatusList) GetPorts() []*PortDefinition {
	if x != nil {
		return x.Ports
	}
	return nil
}

type GetClientsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProtocolName  string                 `protobuf:"bytes,1,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	PortReceiver  int32                  `protobuf:"varint,2,opt,name=port_receiver,json=portReceiver,proto3" json:"port_receiver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClientsRequest) Reset() {
	*x = GetClientsRequest{}
	mi := &file_receiver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsRequest) ProtoMessage() {}

func (x *GetClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsRequest.ProtoReflect.Descriptor instead.
func (*GetClientsRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{5}
}

func (x *GetClientsRequest) GetProtocolName() string {
	if x != nil {
		return x.ProtocolName
	}
	return ""
}

func (x *GetClientsRequest) GetPortReceiver() int32 {
	if x != nil {
		return x.PortReceiver
	}
	return 0
}

type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ProtocolName  string                 `protobuf:"bytes,3,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	ConnectTime   string                 `protobuf:"bytes,4,opt,name=connect_time,json=connectTime,proto3" json:"connect_time,omitempty"`
	LastTime      int32                  `protobuf:"varint,5,opt,name=last_time,json=lastTime,proto3" json:"last_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_receiver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{6}
}

func (x *ClientInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClientInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ClientInfo) GetProtocolName() string {
	if x != nil {
		return x.ProtocolName
	}
	return ""
}

func (x *ClientInfo) GetConnectTime() string {
	if x != nil {
		return x.ConnectTime
	}
	return ""
}

func (x *ClientInfo) GetLastTime() int32 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

type GetClientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clients       []*ClientInfo          `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClientsResponse) Reset() {
	*x = GetClientsResponse{}
	mi := &file_receiver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsResponse) ProtoMessage() {}

func (x *GetClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsResponse.ProtoReflect.Descriptor instead.
func (*GetClientsResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{7}
}

func (x *GetClientsResponse) GetClients() []*ClientInfo {
	if x != nil {
		return x.Clients
	}
	return nil
}

type DisconnectClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProtocolName  string                 `protobuf:"bytes,1,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	ClientAddress string                 `protobuf:"bytes,2,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	ClientId      string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectClientRequest) Reset() {
	*x = DisconnectClientRequest{}
	mi := &file_receiver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectClientRequest) ProtoMessage() {}

func (x *DisconnectClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectClientRequest.ProtoReflect.Descriptor instead.
func (*DisconnectClientRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{8}
}

func (x *DisconnectClientRequest) GetProtocolName() string {
	if x != nil {
		return x.ProtocolName
	}
	return ""
}

func (x *DisconnectClientRequest) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

func (x *DisconnectClientRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type DisconnectClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Описание результата или ошибки
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectClientResponse) Reset() {
	*x = DisconnectClientResponse{}
	mi := &file_receiver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectClientResponse) ProtoMessage() {}

func (x *DisconnectClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectClientResponse.ProtoReflect.Descriptor instead.
func (*DisconnectClientResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{9}
}

func (x *DisconnectClientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DisconnectClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PortOperationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                            // Описание результата или ошибки
	PortDetails   *PortDefinition        `protobuf:"bytes,3,opt,name=port_details,json=portDetails,proto3" json:"port_details,omitempty"` // Детали созданного/измененного порта
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortOperationResponse) Reset() {
	*x = PortOperationResponse{}
	mi := &file_receiver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortOperationResponse) ProtoMessage() {}

func (x *PortOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortOperationResponse.ProtoReflect.Descriptor instead.
func (*PortOperationResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{10}
}

func (x *PortOperationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PortOperationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PortOperationResponse) GetPortDetails() *PortDefinition {
	if x != nil {
		return x.PortDetails
	}
	return nil
}

var File_receiver_proto protoreflect.FileDescriptor

const file_receiver_proto_rawDesc = "" +
	"\n" +
	"\x0ereceiver.proto\x12\x05proto\x1a\rservice.proto\x1a\x1bgoogle/protobuf/empty.proto\"&\n" +
	"\x0eGetActiveCount\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"\x9a\x02\n" +
	"\x0ePortDefinition\x12\x1f\n" +
	"\vid_receiver\x18\x01 \x01(\x05R\n" +
	"idReceiver\x12\x13\n" +
	"\x05id_sm\x18\x02 \x01(\x05R\x04idSm\x12\x16\n" +
	"\x06active\x18\x04 \x01(\bR\x06active\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12#\n" +
	"\rport_receiver\x18\a \x01(\x05R\fportReceiver\x12\x1a\n" +
	"\bprotocol\x18\b \x01(\tR\bprotocol\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12+\n" +
	"\x11connections_count\x18\r \x01(\x05R\x10connectionsCount\"t\n" +
	"\x11ListPortsResponse\x12+\n" +
	"\x05ports\x18\x01 \x03(\v2\x15.proto.PortDefinitionR\x05ports\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"o\n" +
	"\x12PortStatusResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rport_receiver\x18\x02 \x01(\x05R\fportReceiver\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"=\n" +
	"\x0ePortStatusList\x12+\n" +
	"\x05ports\x18\x01 \x03(\v2\x15.proto.PortDefinitionR\x05ports\"]\n" +
	"\x11GetClientsRequest\x12#\n" +
	"\rprotocol_name\x18\x01 \x01(\tR\fprotocolName\x12#\n" +
	"\rport_receiver\x18\x02 \x01(\x05R\fportReceiver\"\x9b\x01\n" +
	"\n" +
	"ClientInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12#\n" +
	"\rprotocol_name\x18\x03 \x01(\tR\fprotocolName\x12!\n" +
	"\fconnect_time\x18\x04 \x01(\tR\vconnectTime\x12\x1b\n" +
	"\tlast_time\x18\x05 \x01(\x05R\blastTime\"A\n" +
	"\x12GetClientsResponse\x12+\n" +
	"\aclients\x18\x01 \x03(\v2\x11.proto.ClientInfoR\aclients\"\x82\x01\n" +
	"\x17DisconnectClientRequest\x12#\n" +
	"\rprotocol_name\x18\x01 \x01(\tR\fprotocolName\x12%\n" +
	"\x0eclient_address\x18\x02 \x01(\tR\rclientAddress\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\"N\n" +
	"\x18DisconnectClientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x85\x01\n" +
	"\x15PortOperationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\fport_details\x18\x03 \x01(\v2\x15.proto.PortDefinitionR\vportDetails2\xcd\x05\n" +
	"\x0fReceiverControl\x12D\n" +
	"\vSetLogLevel\x12\x19.proto.SetLogLevelRequest\x1a\x1a.proto.SetLogLevelResponse\x12L\n" +
	"\x19GetActiveConnectionsCount\x12\x18.proto.GetClientsRequest\x1a\x15.proto.GetActiveCount\x12=\n" +
	"\tListPorts\x12\x16.google.protobuf.Empty\x1a\x18.proto.ListPortsResponse\x12@\n" +
	"\rGetPortStatus\x12\x18.proto.GetClientsRequest\x1a\x15.proto.PortDefinition\x12J\n" +
	"\x13GetConnectedClients\x12\x18.proto.GetClientsRequest\x1a\x19.proto.GetClientsResponse\x12S\n" +
	"\x10DisconnectClient\x12\x1e.proto.DisconnectClientRequest\x1a\x1f.proto.DisconnectClientResponse\x12?\n" +
	"\bOpenPort\x12\x15.proto.PortDefinition\x1a\x1c.proto.PortOperationResponse\x12@\n" +
	"\tClosePort\x12\x15.proto.PortDefinition\x1a\x1c.proto.PortOperationResponse\x12>\n" +
	"\aAddPort\x12\x15.proto.PortDefinition\x1a\x1c.proto.PortOperationResponse\x12A\n" +
	"\n" +
	"DeletePort\x12\x15.proto.PortDefinition\x1a\x1c.proto.PortOperationResponseB\x12Z\x10NavControl/protob\x06proto3"

var (
	file_receiver_proto_rawDescOnce sync.Once
	file_receiver_proto_rawDescData []byte
)

func file_receiver_proto_rawDescGZIP() []byte {
	file_receiver_proto_rawDescOnce.Do(func() {
		file_receiver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_receiver_proto_rawDesc), len(file_receiver_proto_rawDesc)))
	})
	return file_receiver_proto_rawDescData
}

var file_receiver_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_receiver_proto_goTypes = []any{
	(*GetActiveCount)(nil),           // 0: proto.GetActiveCount
	(*PortDefinition)(nil),           // 1: proto.PortDefinition
	(*ListPortsResponse)(nil),        // 2: proto.ListPortsResponse
	(*PortStatusResponse)(nil),       // 3: proto.PortStatusResponse
	(*PortStatusList)(nil),           // 4: proto.PortStatusList
	(*GetClientsRequest)(nil),        // 5: proto.GetClientsRequest
	(*ClientInfo)(nil),               // 6: proto.ClientInfo
	(*GetClientsResponse)(nil),       // 7: proto.GetClientsResponse
	(*DisconnectClientRequest)(nil),  // 8: proto.DisconnectClientRequest
	(*DisconnectClientResponse)(nil), // 9: proto.DisconnectClientResponse
	(*PortOperationResponse)(nil),    // 10: proto.PortOperationResponse
	(*SetLogLevelRequest)(nil),       // 11: proto.SetLogLevelRequest
	(*emptypb.Empty)(nil),            // 12: google.protobuf.Empty
	(*SetLogLevelResponse)(nil),      // 13: proto.SetLogLevelResponse
}
var file_receiver_proto_depIdxs = []int32{
	1,  // 0: proto.ListPortsResponse.ports:type_name -> proto.PortDefinition
	1,  // 1: proto.PortStatusList.ports:type_name -> proto.PortDefinition
	6,  // 2: proto.GetClientsResponse.clients:type_name -> proto.ClientInfo
	1,  // 3: proto.PortOperationResponse.port_details:type_name -> proto.PortDefinition
	11, // 4: proto.ReceiverControl.SetLogLevel:input_type -> proto.SetLogLevelRequest
	5,  // 5: proto.ReceiverControl.GetActiveConnectionsCount:input_type -> proto.GetClientsRequest
	12, // 6: proto.ReceiverControl.ListPorts:input_type -> google.protobuf.Empty
	5,  // 7: proto.ReceiverControl.GetPortStatus:input_type -> proto.GetClientsRequest
	5,  // 8: proto.ReceiverControl.GetConnectedClients:input_type -> proto.GetClientsRequest
	8,  // 9: proto.ReceiverControl.DisconnectClient:input_type -> proto.DisconnectClientRequest
	1,  // 10: proto.ReceiverControl.OpenPort:input_type -> proto.PortDefinition
	1,  // 11: proto.ReceiverControl.ClosePort:input_type -> proto.PortDefinition
	1,  // 12: proto.ReceiverControl.AddPort:input_type -> proto.PortDefinition
	1,  // 13: proto.ReceiverControl.DeletePort:input_type -> proto.PortDefinition
	13, // 14: proto.ReceiverControl.SetLogLevel:output_type -> proto.SetLogLevelResponse
	0,  // 15: proto.ReceiverControl.GetActiveConnectionsCount:output_type -> proto.GetActiveCount
	2,  // 16: proto.ReceiverControl.ListPorts:output_type -> proto.ListPortsResponse
	1,  // 17: proto.ReceiverControl.GetPortStatus:output_type -> proto.PortDefinition
	7,  // 18: proto.ReceiverControl.GetConnectedClients:output_type -> proto.GetClientsResponse
	9,  // 19: proto.ReceiverControl.DisconnectClient:output_type -> proto.DisconnectClientResponse
	10, // 20: proto.ReceiverControl.OpenPort:output_type -> proto.PortOperationResponse
	10, // 21: proto.ReceiverControl.ClosePort:output_type -> proto.PortOperationResponse
	10, // 22: proto.ReceiverControl.AddPort:output_type -> proto.PortOperationResponse
	10, // 23: proto.ReceiverControl.DeletePort:output_type -> proto.PortOperationResponse
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_receiver_proto_init() }
func file_receiver_proto_init() {
	if File_receiver_proto != nil {
		return
	}
	file_service_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_receiver_proto_rawDesc), len(file_receiver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_receiver_proto_goTypes,
		DependencyIndexes: file_receiver_proto_depIdxs,
		MessageInfos:      file_receiver_proto_msgTypes,
	}.Build()
	File_receiver_proto = out.File
	file_receiver_proto_goTypes = nil
	file_receiver_proto_depIdxs = nil
}
