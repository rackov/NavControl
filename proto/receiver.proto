// Синтаксис Protocol Buffers v3
syntax = "proto3";

// Пакет для Go
package proto;

option go_package = "NavControl/proto";


import "google/protobuf/empty.proto";

// Сервис управления RECEIVER'ом
service ReceiverControl {

   // Получить количество активных подключений
  rpc GetActiveConnectionsCount(GetClientsRequest) returns (GetActiveCount);

  // Получить список портов
  rpc ListPorts(google.protobuf.Empty) returns (ListPortsResponse);

  // Получить статус порта
  rpc GetPortStatus(GetClientsRequest) returns (PortDefinition);

  // Получить список подключенных клиентов
  rpc GetConnectedClients(GetClientsRequest) returns (GetClientsResponse);

  // Отключить клиента
  rpc DisconnectClient(DisconnectClientRequest) returns (DisconnectClientResponse);

    // Открыть порт (сделать active=true)
  rpc OpenPort(PortDefinition) returns (PortOperationResponse);

  // Закрыть порт (сделать active=false)
  rpc ClosePort(PortDefinition) returns (PortOperationResponse);

  // Добавить новый порт в конфигурацию 
  rpc AddPort(PortDefinition) returns (PortOperationResponse);

  // Удалить порт из конфигурации
  rpc DeletePort(PortDefinition) returns (PortOperationResponse);

  // список протоколов
  rpc GetProtocols(google.protobuf.Empty) returns (Protocols);
}
message Protocols{
    repeated string protocol_list = 1;
}

message GetActiveCount{
    int32 count = 1;
}

// Определение порта
message PortDefinition {
    int32 id_receiver = 1;  // Уникальный идентификатор receiver
    int32 id_sm = 2;        // Уникальный идентификатор SM
    bool active = 4;     // Активен ли receiver
    string name = 5;        // Имя receiver
    int32 port_receiver = 7; // Номер порта receiver
    string protocol = 8;     // Протокол receiver (EGTS, Arnavi, NDTP)
    string status = 11;     // Статус receiver
    string description = 12; // Описание receiver
    int32 connections_count=13; // Количество подключенных клиентов    
}

// Ответ на запрос списка портов
message ListPortsResponse {
  repeated PortDefinition ports = 1;
  bool success = 2;
  string message = 3;
}
message PortStatusResponse {
    string name = 1;    // "EGTS", "Arnavi", "NDTP"
    int32 port_receiver = 2;     // Номер порта
    string description = 3;
}

message PortStatusList {
  repeated PortDefinition ports = 1;
}



message GetClientsRequest {
  string protocol_name = 1;
  int32 port_receiver =2;
}
message IdInfo  {
  int32 tid = 1;
  string imei = 2;
}
message ClientInfo {
  string id = 1;
  string address = 2;
  string protocol_name = 3;
  int32 connect_time = 4;
  int32  last_time = 5;
  int32  port_receiver = 6;
  int32 id_receiver=7;
  int64 count_packets=9;
  IdInfo device=8;
}

message GetClientsResponse {
  repeated ClientInfo clients = 1;
}

message DisconnectClientRequest {
  string protocol_name = 1;
  string client_address = 2;
  string client_id = 3;
}

message DisconnectClientResponse {
  bool success = 1;
  string message = 2; // Описание результата или ошибки
}

// message PortIdentifier {
//  int32 port_receiver = 1; // номер порта
// }

message PortOperationResponse {
  bool success = 1;
  string message = 2; // Описание результата или ошибки
  PortDefinition port_details = 3; // Детали созданного/измененного порта
}
